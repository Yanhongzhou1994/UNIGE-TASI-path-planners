cmake_minimum_required(VERSION 3.10)
set(RTEMS_ROOT_PATH             "/mnt/sdb/rtems")
set(RTEMS_TOOLS_INSTALL_DIR     "${RTEMS_ROOT_PATH}/5")
set(RTEMS_TOOLS_BSP_LIB_DIR     "${RTEMS_ROOT_PATH}/5/sparc-rtems5/lib")
set(RTEMS_KERNEL_INSTALL_DIR    "${RTEMS_ROOT_PATH}/5/sparc-rtems5/erc32")
set(RTEMS_KERNEL_BSP_LIB_DIR    "${RTEMS_ROOT_PATH}/5/sparc-rtems5/erc32/lib")

set(ENV{PATH} "${RTEMS_TOOLS_INSTALL_DIR}/bin:$ENV{PATH}")
set(RTEMS_TOOLS_BSP_INCLUDE_DIR       "${RTEMS_ROOT_PATH}/5/sparc-rtems5/include")
set(RTEMS_KERNEL_BSP_INCLUDE_DIR      "${RTEMS_KERNEL_BSP_LIB_DIR}/include")
set(RTEMS_COMPILE_OPTIONS             "-B${RTEMS_KERNEL_BSP_LIB_DIR} -B${RTEMS_TOOLS_BSP_LIB_DIR} -specs bsp_specs -qrtems -mcpu=cypress")

set(CMAKE_SYSTEM_NAME         Generic)
set(CMAKE_SYSTEM_PROCESSOR    sparc)


set(CMAKE_C_COMPILER "sparc-rtems5-gcc")
set(CMAKE_CXX_COMPILER "sparc-rtems5-g++")

if(NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE          "RelWithDebInfo"     CACHE STRING "")
endif()
set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug RelWithDebInfo Release)

set(CMAKE_CXX_FLAGS_DEBUG             "${RTEMS_COMPILE_OPTIONS} -g"              CACHE STRING "")
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO    "${RTEMS_COMPILE_OPTIONS} -g -O2"          CACHE STRING "")
set(CMAKE_CXX_FLAGS_RELEASE           "${RTEMS_COMPILE_OPTIONS} -O2 -DNDEBUG"    CACHE STRING "")

set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)


project(roncapat_global_planners)
add_compile_options(-W -Wall -Wextra)

# set default build type
IF (NOT CMAKE_BUILD_TYPE)
    SET(CMAKE_BUILD_TYPE Release)
ENDIF (NOT CMAKE_BUILD_TYPE)

message("Build type: ${CMAKE_BUILD_TYPE}")

IF (CMAKE_BUILD_TYPE MATCHES Release)
    #add_compile_options(-march=native -mtune=native)
ENDIF (CMAKE_BUILD_TYPE MATCHES Release)

IF (CMAKE_BUILD_TYPE MATCHES Debug)
#    add_compile_options(-DVERBOSE_EXTRACTION)
ENDIF (CMAKE_BUILD_TYPE MATCHES Debug)

IF (CMAKE_BUILD_TYPE MATCHES DebugNoAssert)
    #add_compile_options(-DVERBOSE_EXTRACTION)
    add_compile_options(-DNDEBUG)
ENDIF (CMAKE_BUILD_TYPE MATCHES DebugNoAssert)

add_subdirectory(Simulator)
add_subdirectory(ProjectToolkit)
add_subdirectory(RobinHoodHashMap)
set(OPT_LVL 0) 
set(NO_HEURISTIC 1)
add_subdirectory(FieldDStar FD_0_no_heur)
set(NO_HEURISTIC 0)
add_subdirectory(FieldDStar FD_0_heur)
set(OPT_LVL 1)
set(NO_HEURISTIC 1)
add_subdirectory(FieldDStar FD_1_no_heur)
set(NO_HEURISTIC 0)
add_subdirectory(FieldDStar FD_1_heur)
set(OPT_LVL 0)
add_subdirectory(DynamicFastMarching DFM_0)
set(OPT_LVL 1)
add_subdirectory(DynamicFastMarching DFM_1)
set(OPT_LVL 0)
set(NO_HEURISTIC 1)
add_subdirectory(ShiftedGridFastMarching SGDFM_0_no_heur)
set(NO_HEURISTIC 0)
add_subdirectory(ShiftedGridFastMarching SGDFM_0_heur)
set(OPT_LVL 1)
set(NO_HEURISTIC 1)
add_subdirectory(ShiftedGridFastMarching SGDFM_1_no_heur)
set(NO_HEURISTIC 0)
add_subdirectory(ShiftedGridFastMarching SGDFM_1_heur)
set(OPT_LVL 2)
set(NO_HEURISTIC 1)
add_subdirectory(ShiftedGridFastMarching SGDFM_2_no_heur)
set(NO_HEURISTIC 0)
add_subdirectory(ShiftedGridFastMarching SGDFM_2_heur)

add_dependencies(ProjectToolkit robin_hood)
target_include_directories(ProjectToolkit BEFORE PRIVATE ${RTEMS_TOOLS_BSP_INCLUDE_DIR} ${RTEMS_KERNEL_BSP_INCLUDE_DIR})
foreach(target 
field_d_planner_0_heur 
field_d_planner_1_heur
field_d_planner_0_no_heur
field_d_planner_1_no_heur
dfm_planner_0
dfm_planner_1
shifted_grid_planner_0_heur
shifted_grid_planner_1_heur
shifted_grid_planner_2_heur
shifted_grid_planner_0_no_heur
shifted_grid_planner_1_no_heur
shifted_grid_planner_2_no_heur
)
add_dependencies(${target} simulator ProjectToolkit)
target_include_directories(${target} BEFORE PRIVATE ${RTEMS_TOOLS_BSP_INCLUDE_DIR} ${RTEMS_KERNEL_BSP_INCLUDE_DIR})
endforeach(target)

#execute_process(COMMAND rm -rf "${CMAKE_BINARY_DIR}/pipe_1" "${CMAKE_BINARY_DIR}/pipe_2")
#execute_process(COMMAND mkfifo "${CMAKE_BINARY_DIR}/pipe_1" "${CMAKE_BINARY_DIR}/pipe_2")
